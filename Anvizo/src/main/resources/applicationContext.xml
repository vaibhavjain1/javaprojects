<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="appProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:email.properties</value>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>

	<!-- ========== EMAIL ========== -->

	<bean id="emailService" class="com.anvizo.service.EmailService">
		<constructor-arg ref="emailFactory" />
	</bean>

	<bean id="emailFactory" class="com.anvizo.factory.EmailFactory">
		<constructor-arg>
			<map>
				<entry key="mail.smtp.host" value="${email.smtp.host}" />
				<entry key="mail.smtp.port" value="${email.smtp.port}" />
				<entry key="mail.smtp.auth" value="${email.smtp.auth}" />
			</map>
		</constructor-arg>
		<constructor-arg value="${email.smtp.username}" />
		<constructor-arg value="${email.smtp.password}" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="10" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!--
        			validate: validate the schema, makes no changes to the database.
					update: update the schema.
					create: creates the schema, destroying previous data.
					create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
				-->	
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
		<property name="packagesToScan">
            <list>
                <value>com.anvizo.model</value>
            </list>
        </property>
	</bean>
</beans>